#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -euo pipefail # Exit on error, uninitialized variable, and failed pipeline

BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_NAME=vips
BIN_DIR=$(
  cd "$(dirname "$0")"
  pwd
) # absolute path
ROOT_DIR=$(dirname "$BIN_DIR")

function indent() {
  c='s/^/       /'
  case $(uname) in
  Darwin) sed -l "$c" ;;
  *) sed -u "$c" ;;
  esac
}

arrow() {
  sed -u 's/^/-----> /'
}

ADD_PATH=""
ADD_LIBHEIF_PATH=""

function vendor() {
  binary="$1"
  path="$2"

  echo "Fetching $binary" | indent
  if [[ ! -f $binary ]]; then
    echo "Error: Binary file $binary not found!" | indent
    exit 1
  fi

  mkdir -p "$path"
  tar -xz -f "$binary" -C "$path"

  # Check for libheif-dev in the extracted files
  if [[ -d "$path/lib/libheif" ]]; then
    ADD_LIBHEIF_PATH="$path/lib"
  else
    echo "Warning: libheif directory not found in $path/lib/libheif"
  fi

  ADD_PATH="$path/bin"
  ADD_PKG_CONFIG_PATH="$path/lib/pkgconfig"
  ADD_CPPPATH="$path/include"
  ADD_CPATH="$path/include"
  ADD_LIBRARY_PATH="$path/lib"
  ADD_LD_LIBRARY_PATH="$path/lib"
}

echo "Vendoring binaries" | arrow
# Adjust the path to your heroku-22.tar.gz file if necessary
vendor "${ROOT_DIR}/build/heroku-22.tar.gz" "$BUILD_DIR/vendor"

echo "Configuring build environment" | arrow

cat <<EOF >export
export PATH="/app/bin:$ADD_PATH:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:$ADD_LD_LIBRARY_PATH:$ADD_LIBHEIF_PATH"
export LIBRARY_PATH="\$LIBRARY_PATH:$ADD_LIBRARY_PATH:$ADD_LIBHEIF_PATH"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:$ADD_PKG_CONFIG_PATH"
export CPPPATH="\$CPPPATH:$ADD_CPPPATH"
export CPATH="\$CPATH:$ADD_CPATH"
EOF

echo "Building runtime environment" | arrow
mkdir -p "$BUILD_DIR/.profile.d"

cat <<EOF >"$BUILD_DIR/.profile.d/$BUILDPACK_NAME.sh"
export PATH="/app/bin:${ADD_PATH//$BUILD_DIR//app}:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:${ADD_LD_LIBRARY_PATH//$BUILD_DIR//app}:${ADD_LIBHEIF_PATH//$BUILD_DIR//app}"
export LIBRARY_PATH="\$LIBRARY_PATH:${ADD_LIBRARY_PATH//$BUILD_DIR//app}:${ADD_LIBHEIF_PATH//$BUILD_DIR//app}"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:${ADD_PKG_CONFIG_PATH//$BUILD_DIR//app}"
export CPPPATH="\$CPPPATH:${ADD_CPPPATH//$BUILD_DIR//app}"
export CPATH="\$CPATH:${ADD_CPATH//$BUILD_DIR//app}"
EOF
